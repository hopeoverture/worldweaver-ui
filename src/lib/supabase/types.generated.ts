// Generated by Codex CLI (manual sync with Supabase schema)
// Schema: public

export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export type Database = {
  public: {
    Tables: {
      profiles: {
        Row: {
          id: string
          email: string
          full_name: string | null
          avatar_url: string | null
          created_at: string
          updated_at: string
        }
        Insert: {
          id: string
          email: string
          full_name?: string | null
          avatar_url?: string | null
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          email?: string
          full_name?: string | null
          avatar_url?: string | null
          created_at?: string
          updated_at?: string
        }
        Relationships: []
      }
      worlds: {
        Row: {
          id: string
          owner_id: string
          name: string
          description: string | null
          is_public: boolean | null
          is_archived: boolean | null
          settings: Json | null
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          owner_id: string
          name: string
          description?: string | null
          is_public?: boolean | null
          is_archived?: boolean | null
          settings?: Json | null
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          owner_id?: string
          name?: string
          description?: string | null
          is_public?: boolean | null
          is_archived?: boolean | null
          settings?: Json | null
          created_at?: string
          updated_at?: string
        }
        Relationships: []
      }
      world_members: {
        Row: {
          id: string
          world_id: string
          user_id: string
          role: Database['public']['Enums']['world_member_role'] | null
          joined_at: string
        }
        Insert: {
          id?: string
          world_id: string
          user_id: string
          role?: Database['public']['Enums']['world_member_role'] | null
          joined_at?: string
        }
        Update: {
          id?: string
          world_id?: string
          user_id?: string
          role?: Database['public']['Enums']['world_member_role'] | null
          joined_at?: string
        }
        Relationships: [
          {
            foreignKeyName: 'world_members_world_id_fkey'
            columns: ['world_id']
            isOneToOne: false
            referencedRelation: 'worlds'
            referencedColumns: ['id']
          }
        ]
      }
      folders: {
        Row: {
          id: string
          world_id: string
          parent_folder_id: string | null
          name: string
          description: string | null
          color: string | null
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          world_id: string
          parent_folder_id?: string | null
          name: string
          description?: string | null
          color?: string | null
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          world_id?: string
          parent_folder_id?: string | null
          name?: string
          description?: string | null
          color?: string | null
          created_at?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: 'folders_world_id_fkey'
            columns: ['world_id']
            isOneToOne: false
            referencedRelation: 'worlds'
            referencedColumns: ['id']
          }
        ]
      }
      templates: {
        Row: {
          id: string
          world_id: string | null
          name: string
          description: string | null
          icon: string | null
          category: string | null
          fields: Json
          is_system: boolean | null
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          world_id?: string | null
          name: string
          description?: string | null
          icon?: string | null
          category?: string | null
          fields?: Json
          is_system?: boolean | null
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          world_id?: string | null
          name?: string
          description?: string | null
          icon?: string | null
          category?: string | null
          fields?: Json
          is_system?: boolean | null
          created_at?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: 'templates_world_id_fkey'
            columns: ['world_id']
            isOneToOne: false
            referencedRelation: 'worlds'
            referencedColumns: ['id']
          }
        ]
      }
      entities: {
        Row: {
          id: string
          world_id: string
          template_id: string | null
          folder_id: string | null
          name: string
          data: Json
          tags: string[] | null
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          world_id: string
          template_id?: string | null
          folder_id?: string | null
          name: string
          data?: Json
          tags?: string[] | null
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          world_id?: string
          template_id?: string | null
          folder_id?: string | null
          name?: string
          data?: Json
          tags?: string[] | null
          created_at?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: 'entities_world_id_fkey'
            columns: ['world_id']
            isOneToOne: false
            referencedRelation: 'worlds'
            referencedColumns: ['id']
          },
          {
            foreignKeyName: 'entities_template_id_fkey'
            columns: ['template_id']
            isOneToOne: false
            referencedRelation: 'templates'
            referencedColumns: ['id']
          },
          {
            foreignKeyName: 'entities_folder_id_fkey'
            columns: ['folder_id']
            isOneToOne: false
            referencedRelation: 'folders'
            referencedColumns: ['id']
          }
        ]
      }
      relationships: {
        Row: {
          id: string
          world_id: string
          from_entity_id: string
          to_entity_id: string
          relationship_type: string
          description: string | null
          metadata: Json | null
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          world_id: string
          from_entity_id: string
          to_entity_id: string
          relationship_type?: string
          description?: string | null
          metadata?: Json | null
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          world_id?: string
          from_entity_id?: string
          to_entity_id?: string
          relationship_type?: string
          description?: string | null
          metadata?: Json | null
          created_at?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: 'relationships_world_id_fkey'
            columns: ['world_id']
            isOneToOne: false
            referencedRelation: 'worlds'
            referencedColumns: ['id']
          },
          {
            foreignKeyName: 'relationships_from_entity_id_fkey'
            columns: ['from_entity_id']
            isOneToOne: false
            referencedRelation: 'entities'
            referencedColumns: ['id']
          },
          {
            foreignKeyName: 'relationships_to_entity_id_fkey'
            columns: ['to_entity_id']
            isOneToOne: false
            referencedRelation: 'entities'
            referencedColumns: ['id']
          }
        ]
      }
      world_bans: {
        Row: {
          id: string
          world_id: string
          banned_user_id: string
          banned_by_user_id: string
          reason: string | null
          banned_at: string
        }
        Insert: {
          id?: string
          world_id: string
          banned_user_id: string
          banned_by_user_id: string
          reason?: string | null
          banned_at?: string
        }
        Update: {
          id?: string
          world_id?: string
          banned_user_id?: string
          banned_by_user_id?: string
          reason?: string | null
          banned_at?: string
        }
        Relationships: [
          {
            foreignKeyName: 'world_bans_world_id_fkey'
            columns: ['world_id']
            isOneToOne: false
            referencedRelation: 'worlds'
            referencedColumns: ['id']
          }
        ]
      }
      world_invites: {
        Row: {
          id: string
          world_id: string
          email: string
          role: 'admin' | 'editor' | 'viewer'
          invited_by: string | null
          token: string
          expires_at: string
          accepted_at: string | null
          created_at: string
        }
        Insert: {
          id?: string
          world_id: string
          email: string
          role: 'admin' | 'editor' | 'viewer'
          invited_by?: string | null
          token: string
          expires_at: string
          accepted_at?: string | null
          created_at?: string
        }
        Update: {
          id?: string
          world_id?: string
          email?: string
          role?: 'admin' | 'editor' | 'viewer'
          invited_by?: string | null
          token?: string
          expires_at?: string
          accepted_at?: string | null
          created_at?: string
        }
        Relationships: [
          {
            foreignKeyName: 'world_invites_world_id_fkey'
            columns: ['world_id']
            isOneToOne: false
            referencedRelation: 'worlds'
            referencedColumns: ['id']
          }
        ]
      }
      activity_logs: {
        Row: {
          id: string
          world_id: string
          user_id: string | null
          action: string
          entity_type: string | null
          entity_id: string | null
          details: Json | null
          created_at: string
        }
        Insert: {
          id?: string
          world_id: string
          user_id?: string | null
          action: string
          entity_type?: string | null
          entity_id?: string | null
          details?: Json | null
          created_at?: string
        }
        Update: {
          id?: string
          world_id?: string
          user_id?: string | null
          action?: string
          entity_type?: string | null
          entity_id?: string | null
          details?: Json | null
          created_at?: string
        }
        Relationships: [
          {
            foreignKeyName: 'activity_logs_world_id_fkey'
            columns: ['world_id']
            isOneToOne: false
            referencedRelation: 'worlds'
            referencedColumns: ['id']
          }
        ]
      }
      world_files: {
        Row: {
          id: string
          world_id: string
          file_name: string
          file_path: string
          file_size: number | null
          mime_type: string | null
          uploaded_by: string | null
          created_at: string
        }
        Insert: {
          id?: string
          world_id: string
          file_name: string
          file_path: string
          file_size?: number | null
          mime_type?: string | null
          uploaded_by?: string | null
          created_at?: string
        }
        Update: {
          id?: string
          world_id?: string
          file_name?: string
          file_path?: string
          file_size?: number | null
          mime_type?: string | null
          uploaded_by?: string | null
          created_at?: string
        }
        Relationships: [
          {
            foreignKeyName: 'world_files_world_id_fkey'
            columns: ['world_id']
            isOneToOne: false
            referencedRelation: 'worlds'
            referencedColumns: ['id']
          }
        ]
      }
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      user_has_world_access: {
        Args: { world_uuid: string; user_uuid: string }
        Returns: boolean
      }
      accept_world_invite: {
        Args: { invite_token: string }
        Returns: boolean
      }
    }
    Enums: {
      world_member_role: 'viewer' | 'editor' | 'admin'
    }
    CompositeTypes: {
      [_ in never]: never
    }
  }
}

